name: Release1

permissions:
  # TODO: once `releases: write` is supported, use it instead.
  contents: write

on:
  push:
    tags:
      - v[0-9]+.*
  workflow_dispatch:
    inputs:
      tags:
          description: 'Release tags'
          default: ''

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10

defaults:
  run:
    shell: bash

jobs:
  upload-assets:
    name: ${{ matrix.target }}
    strategy:
      matrix:
        # When updating this list, the reminder to update the target list in ci.yml.
        include:
          # Native builds
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: i686-pc-windows-msvc
            os: windows-latest
          - target: universal-apple-darwin
            os: macos-latest

          # Builds using cross
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          # - target: x86_64-unknown-freebsd
          #   os: ubuntu-latest
          # - target: x86_64-unknown-illumos
          #   os: ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get -qq update \
          && sudo apt-get -qq -y install gh \
          && sudo apt-get install -y libssl-dev \
          && sudo apt-get install -y libudev-dev \
          && sudo apt-get install  pkg-config
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: dtolnay/rust-toolchain@stable
      - name: Get tag
        if: github.event.inputs.tags == ''
        id: tag
        uses: dawidd6/action-get-tag@v1.1.0
        with:
          # Optionally strip `v` prefix
          strip_v: true
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          ref: refs/tags/v${{github.event.inputs.tags || steps.tag.outputs.tag}}
          bin: git-semver-tags
          archive: $bin-${{github.event.inputs.tags || steps.tag.outputs.tag}}-$target
          target: ${{ matrix.target }}
          tar: all
          zip: windows
          token: ${{ secrets.GITHUB_TOKEN }}
